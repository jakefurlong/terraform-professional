name: Modular Terraform Unit Tests with Promotion

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

permissions:
  id-token: write
  contents: write

env:
  AWS_REGION: us-west-1

jobs:
  unit-tests:
    name: Terratest - ${{ matrix.module }} Module
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: [vpc, alb, asg, rds]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.4
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Go dependencies
        run: |
          go mod init terratest || true
          go get github.com/gruntwork-io/terratest/modules/terraform
          go get github.com/stretchr/testify/assert

      - name: Run Terratest for ${{ matrix.module }}
        working-directory: tests/unit/${{ matrix.module }}
        run: go test -v || true  # Let destroy run even if test fails

      - name: Terraform Destroy (always)
        if: always()
        working-directory: tests/unit/${{ matrix.module }}
        run: terraform destroy -auto-approve

  promote-to-test:
    name: Promote dev to test
    runs-on: ubuntu-latest
    needs: unit-tests
    if: ${{ success() }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "CI Bot"
          git config --global user.email "ci-bot@example.com"

      - name: Promote dev to test
        run: |
          git checkout dev
          git pull origin dev
          git checkout -B test
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} test --force
